import { useRef, useState } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { EffectComposer, Bloom, TiltShift2 } from '@react-three/postprocessing'
import CircularSlider from '@fseehawer/react-circular-slider'
import { easing } from 'maath'

export function App({ days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] }) {
  const [day, set] = useState('Wed')
  return (
    <>
      <Canvas gl={{ antialias: false }}>
        <color attach="background" args={['#101015']} />
        <PerspectiveCamera makeDefault position={[0, -0.5, 5]} fov={50} />
        <Moon offset={days.indexOf(day) / 7} />
        <EffectComposer disableNormalPass>
          <Bloom mipmapBlur luminanceThreshold={0.5} />
          <TiltShift2 blur={0.35} />
        </EffectComposer>
      </Canvas>
      <div class="nav">
        <CircularSlider
          label="Moon Phase"
          width={180}
          labelFontSize="0.75em"
          labelColor="#d0d0d0"
          knobColor="white"
          progressColorFrom="skyblue"
          progressColorTo="hotpink"
          progressSize={10}
          trackColor="#333"
          trackSize={10}
          data={days}
          dataIndex={2}
          onChange={set}
        />
      </div>
    </>
  )
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 moon1.glb --transform
Author: ARCTIC  WOLVESâ„¢ (https://sketchfab.com/arctic.wolves)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/moon-9c73422b05594431a6283d3a13861f38
Title: Moon
*/

export function Moon({ offset = 0, ...props }) {
  const mesh = useRef()
  const light = useRef()
  const { nodes, materials } = useGLTF('/moon-transformed.glb')
  useFrame((state, delta) => {
    easing.dampE(mesh.current.rotation, [Math.PI / 2 + offset / 2, 3, Math.PI + offset], 0.4, delta)
    easing.dampE(light.current.rotation, [1, offset * Math.PI * 3, offset], 0.4, delta)
  })
  return (
    <group {...props} dispose={null}>
      <mesh ref={mesh} geometry={nodes['Sphere001_Material_#39_0'].geometry} material={materials.Material_39} material-normalScale={1.5} scale={0.04} />
      <group ref={light}>
        <spotLight position={[10, 0, -10]} intensity={1.75} angle={0.15} penumbra={1} />
      </group>
    </group>
  )
}

useGLTF.preload('/the_moon-transformed.glb')
